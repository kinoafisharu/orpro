# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-06-24 20:05
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AboutCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ac_title', models.CharField(max_length=80)),
                ('ac_text', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Про компанию на главной',
                'verbose_name': 'Про компанию на главной',
            },
        ),
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('availability_title', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_title', models.CharField(max_length=250)),
            ],
            options={
                'verbose_name_plural': 'Категории',
                'verbose_name': 'Категория',
            },
        ),
        migrations.CreateModel(
            name='FBlocks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fb_title', models.CharField(max_length=80)),
                ('fb_text', models.TextField()),
                ('fb_url', models.CharField(max_length=250)),
            ],
            options={
                'verbose_name_plural': 'Блоки под слайдером',
                'verbose_name': 'Блоки под слайдером',
            },
        ),
        migrations.CreateModel(
            name='Footer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_adres', models.CharField(max_length=80)),
                ('f_skype', models.CharField(max_length=80)),
                ('f_mob_phone', models.CharField(max_length=80)),
                ('f_rob_phone', models.CharField(max_length=80)),
                ('f_facebook_link', models.CharField(max_length=80)),
                ('f_twitter_link', models.CharField(max_length=80)),
            ],
            options={
                'verbose_name_plural': 'Элементы подвала',
                'verbose_name': 'Элементы подвала',
            },
        ),
        migrations.CreateModel(
            name='HeaderPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hp_name', models.CharField(max_length=80)),
                ('hp_photo', models.ImageField(upload_to='')),
            ],
            options={
                'verbose_name_plural': 'Картинка в шапку на главной',
                'verbose_name': 'Картинка в шапку на главной',
            },
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images_url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='LBlocks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lb_title', models.CharField(max_length=80)),
                ('lb_text', models.TextField()),
                ('lb_icon', models.CharField(max_length=80)),
                ('lb_link', models.CharField(blank=True, max_length=250)),
            ],
            options={
                'verbose_name_plural': 'Список под 4 блоками',
                'verbose_name': 'Список под 4 блоками',
            },
        ),
        migrations.CreateModel(
            name='MainBaner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('baner_text', models.CharField(max_length=80)),
                ('baner_img', models.ImageField(blank=True, upload_to='')),
                ('baner_url', models.CharField(max_length=250)),
            ],
            options={
                'verbose_name_plural': 'Банер на главной',
                'verbose_name': 'Банер на главной',
            },
        ),
        migrations.CreateModel(
            name='Offers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offer_title', models.CharField(max_length=250, verbose_name='Название')),
                ('offer_price', models.FloatField(default=0, verbose_name='Цена')),
                ('offer_price_discount', models.FloatField(blank=True, default=0, null=True, verbose_name='Цена со скидкой')),
                ('offer_discount_term', models.DateTimeField(blank=True, null=True, verbose_name='Срок действия скидки')),
                ('offer_price_from', models.FloatField(blank=True, default=0, verbose_name='Цена от')),
                ('offer_price_to', models.FloatField(blank=True, default=0, verbose_name='Цена до')),
                ('offer_valuta', models.CharField(max_length=40, verbose_name='Валюта')),
                ('offer_value', models.CharField(blank=True, max_length=50, verbose_name='Единица измерения')),
                ('offer_minorder', models.IntegerField(default=1, verbose_name='Минимальный размер заказа')),
                ('offer_minorder_value', models.CharField(blank=True, max_length=50, verbose_name='Единица измерения минимального заказа')),
                ('offer_pre_text', models.TextField(verbose_name='Краткое описание')),
                ('offer_text', models.TextField(verbose_name='Полное описание')),
                ('offer_photo_alt', models.CharField(blank=True, max_length=250, verbose_name='Комментарий к изображению')),
                ('offer_priority', models.BooleanField(default=False, verbose_name='Приоритетный товар')),
                ('offer_urt_to_rubric', models.URLField(blank=True, verbose_name='Ссылка на рубрику')),
                ('offer_characteristics', models.TextField(blank=True, verbose_name='Характеристики')),
                ('offer_article', models.CharField(blank=True, max_length=50, verbose_name='Артикул')),
                ('offer_id_on_site', models.IntegerField(blank=True, verbose_name='ID товара на сайте www.pulscen.ru')),
                ('offer_code', models.CharField(blank=True, max_length=50, verbose_name='Код товара в вашем каталоге')),
                ('offer_url', models.CharField(max_length=250, verbose_name='Ссылка на товар на нашем сайте')),
                ('offer_photo', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Фото на страницу')),
                ('offer_availability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pages.Availability', verbose_name='Наличие')),
                ('offer_photo_url', models.ManyToManyField(blank=True, to='pages.Images', verbose_name='Ссылки на изображения')),
            ],
            options={
                'verbose_name_plural': 'Товары',
                'verbose_name': 'Товар',
            },
        ),
        migrations.CreateModel(
            name='Personal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('p_name', models.CharField(max_length=80)),
                ('p_doljnost', models.CharField(max_length=80)),
                ('p_photo', models.ImageField(upload_to='')),
            ],
            options={
                'verbose_name_plural': 'Персонал на главной',
                'verbose_name': 'Персонал на главной',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_title', models.CharField(max_length=250)),
                ('post_seourl', models.CharField(max_length=250)),
                ('post_photo', models.ImageField(blank=True, upload_to='')),
                ('post_text', models.TextField()),
                ('post_cat_level', models.IntegerField(default=0)),
                ('post_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pages.Category')),
            ],
            options={
                'verbose_name_plural': 'Страници',
                'verbose_name': 'Страница',
            },
        ),
        migrations.CreateModel(
            name='Publish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publish_title', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=100)),
                ('number', models.CharField(blank=True, max_length=30)),
                ('text', models.TextField()),
                ('publish', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Subtags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_url', models.CharField(max_length=250, unique=True)),
                ('tag_title', models.CharField(max_length=250)),
            ],
            options={
                'verbose_name_plural': 'Дополнительные теги',
                'verbose_name': 'Дополнительные теги',
            },
        ),
        migrations.CreateModel(
            name='Support',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sup_title', models.CharField(max_length=80)),
                ('sup_time', models.CharField(max_length=80)),
                ('sup_slogan', models.CharField(max_length=80)),
                ('sup_phone', models.CharField(max_length=80)),
            ],
            options={
                'verbose_name_plural': 'Служба поддержки на главной',
                'verbose_name': 'Служба поддержки на главной',
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_url', models.CharField(max_length=250, unique=True)),
                ('tag_title', models.CharField(max_length=250)),
            ],
            options={
                'verbose_name_plural': 'Основные теги',
                'verbose_name': 'Основные теги',
            },
        ),
        migrations.CreateModel(
            name='TopOffers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_title', models.CharField(max_length=80)),
                ('to_link', models.CharField(max_length=250)),
            ],
            options={
                'verbose_name_plural': 'Самые продаваемые товары',
                'verbose_name': 'Самые продаваемые товары',
            },
        ),
        migrations.AddField(
            model_name='subtags',
            name='tag_parent_tag',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='pages.Tags'),
        ),
        migrations.AddField(
            model_name='offers',
            name='offer_publish',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pages.Publish', verbose_name='Публикуемость'),
        ),
        migrations.AddField(
            model_name='offers',
            name='offer_subtags',
            field=models.ManyToManyField(blank=True, to='pages.Subtags', verbose_name='Группа 2 уровня'),
        ),
        migrations.AddField(
            model_name='offers',
            name='offer_tag',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='pages.Tags', verbose_name='Группа 1 уровня'),
        ),
    ]
